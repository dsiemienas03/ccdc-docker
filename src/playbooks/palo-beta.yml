- name: Palo
  hosts: palo
  connection: local
  ignore_errors: true
  roles:
    - dsu.ccdc.palo
  vars:
    provider:
      ip_address: "{{ inventory_hostname }}"
      api_key: "{{ api_key }}"


  tasks:
    - name: Include role
      ansible.builtin.include_role:
        name: dsu.ccdc.palo
        vars_from: main.yml

    - name: Include IP vars
      ansible.builtin.include_vars:
        dir: /home/ansible/data/vars/
    # - name: Show Facts
    #   ansible.builtin.debug:
    #     var: "{{update_os}}, {{logging}}"

    # - name: Pause until for commit verification
    #   ansible.builtin.pause:
    - name: Print configs
      ansible.builtin.debug:
        msg:
          Update OS: "{{ palo_update_os }}"
          Update Other: "{{ palo_update_other }}"
          Initial Interface: "{{ palo_config_initial_interface }}"
          Initial Groups: "{{ palo_config_initial_groups }}"
          Logging: "{{ palo_config_logging }}"
          Initial Rules: "{{ palo_config_initial_rules }}"
          PANOS Version: "{{ palo_panos_version }}"
          Wazuh: "{{ wazuh | default('0.0.0.0') }}"
          Wazuh Port: "{{ wazuh_port | default('0') }}"
          Remote Networks: "{{ remote_net | default('0.0.0.0') }}"

    - name: Tags
      ansible.builtin.import_role:
        name: dsu.ccdc.palo
        tasks_from: tags

    - name: Show IPs
      ansible.builtin.debug:
        msg:
          Phone White: "{{ phone_white }}"
          CCS White: "{{ ccs_white }}"
          Proxy White: "{{ proxy_white }}"
          Mask White: "{{ mask_white }}"
    - name: Confirm config
      ansible.builtin.pause:

    - name: Add CCDC rules
      ansible.builtin.import_role:
        name: dsu.ccdc.palo
        tasks_from: palo_ccdc

  handlers:
    - name: Wait for System Information
      paloaltonetworks.panos.panos_op:
        provider: "{{ provider }}"
        device_group: "{{ device_group if device_group is defined else omit }}"
        cmd: show system info
      register: system_info
      until: system_info is not failed
      retries: 100
      delay: 10
      listen: reboot

    - name: Update System Info
      ansible.builtin.set_fact:
        system_info_json: "{{ system_info.stdout | from_json }}"
      listen: reboot

    - name: Update Software Version
      ansible.builtin.set_fact:
        sw_version: "{{ system_info_json.response.result.system['sw-version'] }}"
      listen: reboot

    - name: Display Current Software version
      ansible.builtin.debug:
        msg: "Current software version is: {{ sw_version }}"
      listen: reboot
