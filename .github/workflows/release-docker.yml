name: Docker Release

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  release:
    types: [published]
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # REGISTRY2: docker.com
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  COMPARE_TAG: latest

jobs:
  setup:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          submodules: "recursive"

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.8.0 # v3.1.1
        with:
          cosign-release: "v2.2.4"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0 # v3.6.1
      - name: Cache Repository
        uses: actions/cache@v4.2.0
        with:
          path: ./
          key: ${{ runner.os }}-repo-${{ github.sha }}

  github-release:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    needs:
      - setup
    steps:
      - name: Restore Cached Repository
        uses: actions/cache@v4.2.0
        with:
          path: ./
          key: ${{ runner.os }}-repo-${{ github.sha }}

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0 # v3.6.1

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3.0.0 # v3.0.0
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3.0.0
        if: ${{ github.event_name != 'pull_request' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.6.1 # v5.6.1
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # ${{ env.REGISTRY2 }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=tag
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action

      - name: Build and push Docker image
        id: build-and-push
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@v6.15.0 # v6.9.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  dockerhub-release:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    needs: setup
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
      digest: ${{ steps.build-and-push-docker.outputs.digest }}
    steps:
      - name: Restore Cached Repository
        uses: actions/cache@v4.2.0
        with:
          path: ./
          key: ${{ runner.os }}-repo-${{ github.sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0 # v3.6.1

      - name: Login to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}}
            type=ref,event=tag
            type=raw,value=${{ github.event.release.tag_name }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image to Docker Hub
        id: build-and-push-docker
        uses: docker/build-push-action@v6.15.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: mode=max

  Docker-Scout:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    needs:
      - dockerhub-release
      - github-release
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Scout
        id: docker-scout
        uses: docker/scout-action@v1
        with:
          command: cves, recommendations, sbom
          image: ${{ needs.github-release.outputs.tags }}
          ignore-unchanged: true
          only-severities: critical,high
          write-comment: true
          github-token: ${{ secrets.GITHUB_TOKEN }} # to be able to write the comment

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ needs.Dockerhub-Release.outputs.tags }}
          DIGEST: ${{ needs.Dockerhub-Release.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Sign the published Docker image on Docker hub
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ needs.Dockerhub-Release.outputs.tags }}
          DIGEST: ${{ needs.Dockerhub-Release.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
