name: Release Publish

on:
  push:
    paths:
      - "VERSION"
    branches:
      - main
  # branches to consider in the event; optional, defaults to all
  # pull_request event is required only for autolabeler
  # pull_request:
  #   # Only following types are handled by the action, but one can default to all as well
  #   types: [opened, reopened, synchronize]
  # pull_request_target event is required for autolabeler to support PRs from forks
  # pull_request_target:
  #   types: [opened, reopened, synchronize]

permissions:
  contents: write

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # REGISTRY2: docker.com
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  COMPARE_TAG: latest

jobs:
  publish_release:
    runs-on: ubuntu-latest
    outputs: 
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 2
      - name: Get version
        id: get_version
        run: echo "version=$(cat VERSION)" >> $GITHUB_ENV
      # (Optional) GitHub Enterprise requires GHE_HOST variable set
      # - name: Set GHE_HOST
      #  run: |
      #    echo "GHE_HOST=${GITHUB_SERVER_URL##https:\/\/}" >> $GITHUB_ENV

      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v6.1.0
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        with:
          #   config-name: my-config.yml
          disable-autolabeler: false
          publish: true
          version: ${{ env.version }}
          tag: ${{ env.version }}
          name: ${{ env.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docker-setup:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          submodules: "recursive"

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.8.1 # v3.1.1
        with:
          cosign-release: "v2.2.4"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0 # v3.6.1
      - name: Cache Repository
        uses: actions/cache@v4.2.2
        with:
          path: ./
          key: ${{ runner.os }}-repo-${{ github.sha }}

  github-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    env:
      VERSION: ${{ needs.publish_release.outputs.version }}
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    needs:
      - docker-setup
      - publish_release
    steps:
      - name: Restore Cached Repository
        uses: actions/cache@v4.2.2
        with:
          path: ./
          key: ${{ runner.os }}-repo-${{ github.sha }}

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0 # v3.6.1

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3.0.0 # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # ${{ env.REGISTRY2 }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ needs.publish_release.outputs.version }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=${{ env.VERSION }}
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.9.0 # v6.9.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  dockerhub-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    env:
      VERSION: ${{ needs.publish_release.outputs.version }}
    needs: 
      - docker-setup
      - publish_release
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
      digest: ${{ steps.build-and-push-docker.outputs.digest }}
    steps:
      - name: Restore Cached Repository
        uses: actions/cache@v4.2.2
        with:
          path: ./
          key: ${{ runner.os }}-repo-${{ github.sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0 # v3.6.1

      - name: Login to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}}
            type=ref,event=tag
            type=raw,value=${{ needs.publish_release.outputs.version }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image to Docker Hub
        id: build-and-push-docker
        uses: docker/build-push-action@v6.13.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: mode=max

  Docker-Scout:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    needs:
      - dockerhub-release
      - github-release
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Scout
        id: docker-scout
        uses: docker/scout-action@v1.16.1
        with:
          command: cves, recommendations, sbom
          image: ${{ needs.github-release.outputs.tags }}
          ignore-unchanged: true
          only-severities: critical,high
          write-comment: true
          github-token: ${{ secrets.GITHUB_TOKEN }} # to be able to write the comment

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign

      - name: Sign the published Docker image
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ needs.Dockerhub-Release.outputs.tags }}
          DIGEST: ${{ needs.Dockerhub-Release.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Sign the published Docker image on Docker hub
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ needs.Dockerhub-Release.outputs.tags }}
          DIGEST: ${{ needs.Dockerhub-Release.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
